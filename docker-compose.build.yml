# Docker Compose pour le d√©veloppement et tests locaux
version: '3.8'

services:
  cesizen_db_test:
    container_name: cesizen_sqlserver_test
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Strong!TestPassw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Strong!TestPassw0rd -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  cesizen_api_build:
    container_name: cesizen_api_build
    build:
      context: .
      dockerfile: CESIZen.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=cesizen_db_test,1433;Database=CESIZenTestDatabase;User Id=sa;Password=Strong!TestPassw0rd;TrustServerCertificate=true;
    ports:
      - "5000:80"
    depends_on:
      cesizen_db_test:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

  cesizen_ui_build:
    container_name: cesizen_ui_build
    build:
      context: .
      dockerfile: CESIZen.UI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=cesizen_db_test,1433;Database=CESIZenTestDatabase;User Id=sa;Password=Strong!TestPassw0rd;TrustServerCertificate=true;
    ports:
      - "5001:80"
    depends_on:
      cesizen_db_test:
        condition: service_healthy
      cesizen_api_build:
        condition: service_started
    volumes:
      - ./logs:/app/logs