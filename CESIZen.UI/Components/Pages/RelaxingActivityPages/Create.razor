@page "/relaxingActivities/create"
@using Microsoft.EntityFrameworkCore
@using CESIZen.Data.Entities
@using CESIZen.Data.Enums
@inject IDbContextFactory<CESIZen.Data.Context.CESIZenDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Créer une activité</PageTitle>

<div class="container-fluid py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Créer une nouvelle ressource</h2>
        </div>
        <div class="card-body">
            <EditForm method="post" Model="relaxingActivity" OnValidSubmit="AddRelaxingActivity" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" role="alert" />

                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="form-group mb-4">
                            <label for="name" class="form-label fw-bold">Nom de l'activité<span class="text-danger">*</span></label>
                            <InputText id="name" @bind-Value="relaxingActivity.Name" class="form-control form-control-lg" placeholder="Nom de l'activité" />
                            <ValidationMessage For="() => relaxingActivity.Name" class="text-danger" />
                        </div>

                        <div class="form-group mb-4">
                            <label for="description" class="form-label fw-bold">Description <span class="text-danger">*</span></label>
                            <InputTextArea id="description" @bind-Value="relaxingActivity.Description" class="form-control" rows="5" placeholder="Description de l'activité..." />
                            <ValidationMessage For="() => relaxingActivity.Description" class="text-danger" />
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label for="difficultyLevel" class="form-label fw-bold">Difficulté <span class="text-danger">*</span></label>
                        <InputSelect id="difficultyLevel" @bind-Value="relaxingActivity.DifficultyLevel" class="form-select">
                            @foreach (DifficultyLevel difficultyLevel in Enum.GetValues(typeof(DifficultyLevel)))
                            {
                                <option value="@difficultyLevel">@GetDifficultyLevelDisplayName(difficultyLevel)</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="() => relaxingActivity.DifficultyLevel" class="text-danger" />
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label for="categoryid" class="form-label fw-bold">Catégorie <span class="text-danger">*</span></label>
                        <InputSelect id="categoryid" @bind-Value="relaxingActivity.CategoryId" class="form-select" required>
                            <option value="">Sélectionner une catégorie</option>
                            @if (categories != null)
                            {
                                @foreach (var category in categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="() => relaxingActivity.CategoryId" class="text-danger" />
                        <small class="form-text text-muted">Sélection obligatoire pour catégoriser votre ressource.</small>
                    </div>
                </div>

                <div class="d-flex justify-content-between border-top pt-4">
                    <a href="@($"/relaxingActivity")" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Retour aux activités
                    </a>
                    <div>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-plus-circle"></i> Créer l'activité
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private RelaxingActivity relaxingActivity { get; set; } = new();

    private List<CategoryRelaxingActivity>? categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        categories = await context.CategoriesRelaxingActivity.ToListAsync();
    }

    private string GetDifficultyLevelDisplayName(DifficultyLevel difficultyLevel)
    {
        return difficultyLevel switch
        {
            DifficultyLevel.Begginer => "Débutant",
            DifficultyLevel.Intermediate => "Intermédiaire",
            DifficultyLevel.Advanced => "Avancé",
            _ => "Inconnu"
        };
    }

    private async Task AddRelaxingActivity()
    {
        using var context = DbFactory.CreateDbContext();

        relaxingActivity.CreationDate = DateTime.Now;

        context.RelaxingActivities.Add(relaxingActivity);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/relaxingActivities");
    }
}