@page "/categoriesRelaxingActivity/delete/{id:int}"
@using Microsoft.EntityFrameworkCore
@using CESIZen.Data.Entities
@inject IDbContextFactory<CESIZen.Data.Context.CESIZenDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Supprimer une catégorie</PageTitle>

<div class="d-flex align-items-center mb-4">
    <a href="/categories" class="btn btn-outline-secondary me-3">
        <i class="bi bi-arrow-left"></i>
    </a>
    <h1 class="mb-0">Supprimer la catégorie</h1>
</div>

@if (category is null)
{
    <div class="d-flex justify-content-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Chargement...</span>
        </div>
    </div>
}
else
{
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-danger text-white">
            <h3 class="mb-0">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                Confirmation de suppression
            </h3>
        </div>
        <div class="card-body">
            <div class="alert alert-warning mb-4">
                <p class="mb-0">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    Êtes-vous sûr de vouloir supprimer définitivement cette catégorie ? Cette action est irréversible.
                </p>
                @if (activitiesCount > 0)
                {
                    <hr />
                    <p class="mb-0">
                        <strong>Attention :</strong> Cette catégorie est utilisée par @activitiesCount activité(s).
                        Ces activités seront supprimées si vous supprimer cette catégorie.
                    </p>
                }
            </div>

            <div class="card bg-light mb-4">
                <div class="card-header">
                    <h4 class="mb-0">Détails de la catégorie</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@category.Name</h5>
                </div>
            </div>

            <EditForm method="post" Model="category" OnValidSubmit="DeleteCategory" FormName="delete" Enhance>
                <div class="d-flex justify-content-end">
                    <a href="/categories" class="btn btn-outline-secondary me-2">
                        <i class="bi bi-x-circle me-1"></i>
                        Annuler
                    </a>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i>
                        Supprimer définitivement
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private CategoryRelaxingActivity? category;
    private int activitiesCount = 0;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        category = await context.CategoriesRelaxingActivity.FindAsync(Id);

        if (category is null)
        {
            NavigationManager.NavigateTo("notfound");
            return;
        }

        // Compter le nombre d'articles associées à cette catégorie
        activitiesCount = await context.InformationalArticles
            .Where(r => r.CategoryId == Id)
            .CountAsync();
    }

    private async Task DeleteCategory()
    {
        using var context = DbFactory.CreateDbContext();

        if (category != null)
        {
            // Récupérer l'entité complète de la base de données
            var categoryToDelete = await context.CategoriesRelaxingActivity.FindAsync(Id);

            if (categoryToDelete != null)
            {
                context.CategoriesRelaxingActivity.Remove(categoryToDelete);
                await context.SaveChangesAsync();
            }
        }

        NavigationManager.NavigateTo("/categoriesRelaxingActivity");
    }
}