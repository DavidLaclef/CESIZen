@page "/categories/create"
@using Microsoft.EntityFrameworkCore
@using CESIZen.Data.Entities
@inject IDbContextFactory<CESIZen.Data.Context.CESIZenDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Créer une catégorie</PageTitle>

<div class="d-flex align-items-center mb-4">
    <a href="/categories" class="btn btn-outline-secondary me-3">
        <i class="bi bi-arrow-left"></i>
    </a>
    <h1 class="mb-0">Nouvelle catégorie</h1>
</div>

<div class="card shadow-sm">
    <div class="card-body">
        <EditForm method="post" Model="Category" OnValidSubmit="AddCategory" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-4">
                <label for="name" class="form-label fw-bold">Nom de la catégorie <span class="text-danger">*</span></label>
                <InputText id="name" @bind-Value="Category.Name" class="form-control form-control-lg" placeholder="Entrez le nom de la catégorie" required />
                <ValidationMessage For="() => Category.Name" class="text-danger" />
            </div>

            <div class="d-flex justify-content-end mt-4">
                <a href="/categories" class="btn btn-outline-secondary me-2">Annuler</a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-1"></i> Créer la catégorie
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new();

    private async Task AddCategory()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categories.Add(Category);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/categories");
    }
}   